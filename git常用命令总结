1 查看尚未暂存（未使用git add命令）的文件更新了哪些部分，不加参数直接输入git diff;此命令比较的是工作目录中当前文件和暂存区域快照之间的差异，也就是修改之后还没有暂存起来的变化内容。
2 若要查看已经暂存起来（已经使用git add命令）的文件和上次提交时的快照之间的差异，可以用git diff --cached命令。
3 git log -p选项显示每次提交的内容差异
4 git commit --amend 修改最后一次提交。此命令将使用当前暂存区快照提交，如果刚才提交完没有作任何改动，直接运行此命令相当于有机会从新编辑提交说明，但将要提交的文件快照和之前的一样。
5 git fetch [remote-name]此命令会到远程仓库总拉取所有你本地仓库中没有的数据，需要注意fetch命令只是将远程数据拉到本地仓库，并不会自动合并到当前工作分支，只有当你确实准备好了，才能手工合并。
6 git pull命令会自动抓取数据下来，然后将远端分支自动合并到本地仓库中的当前分支。
7 如果想要一份自己的serverfix分支来开发，可以在远程分支的基础上分化出来的新的分支，使用命令 git checkout -b serverfix origin/serverfix,这样切换到新建的serverfix本地分支，其内容同远程分支origin/serverfix
一致，这样你就可以在这里面继续开发了。
8 跟踪分支。从远程分支checkout出来的本地分支，称为跟踪分支，跟踪分支是一种和某个远程分支有直接联系的本地分支，在跟踪分支里面输入git push，Git回自动推断应该向哪个服务器的哪个分支推送数据。同样在这些分支里
运行git pull会获取所有远程索引，并把它们的数据都合并到本地分支中来。git checkout -b [分支名] [远程名]/[分支名]。要为本地分支设定不同于远程分支的名字，只需在第一个版本的命令里换个名字：
git checkout -b sf origin/serverfix。现在你的本地分支sf会自动将推送和抓取数据的位置定位到origin/serverfix了。
9 删除远程分支。git push [远程名]:[分支名]。如果想在服务器上删除serverfix分支，运行下面的命令:
git push origin :serverfix
10 查看配置信息git config --list
11 将本地分支同远程分支进行关联。远程已经创建了分支dev，而本地没有，在本地创建分支并与远程分支关联。step1:先将远程分支pull到本地 git pull origin dev。step2:再将本地创建分支并与之关联。git checkout -b dev origin/dev